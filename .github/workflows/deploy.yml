name: Build and deploy on server

on:
  push

env:
  SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
  SERVER_USER: ${{ secrets.SERVER_USER }}
  SERVER_HOST: ${{ secrets.SERVER_HOST }}
  KNOWN_HOSTS: ${{ secrets.KNOWN_HOSTS }}
  DIRECTORY: "${{ vars.DIRECTORY }}/${{ github.event.repository.name }}"

jobs:
  checkout-code:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "latest"

      - name: Create .env file
        run: |
          echo "${{ secrets.ENVS }}" > .env

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: source-code
          path: .

  setup-ssh:
    runs-on: ubuntu-latest
    needs: checkout-code

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: source-code
          path: .

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add server to known hosts
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.KNOWN_HOSTS }}" > ~/.ssh/known_hosts

  deploy-on-server:
    runs-on: ubuntu-latest
    needs: setup-ssh

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: source-code
          path: .

      - name: Deploy on Server
        run: |
          ssh -t ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} << 'EOF'
            rm -rf ${{ vars.DIRECTORY }} && mkdir -p ${{ vars.DIRECTORY }}
          EOF
          scp -r * ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }}:${{ env.DIRECTORY }}
          scp .env ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }}:${{ env.DIRECTORY }}/.env
          ssh -t ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} << 'EOF'
            echo "Starting application..."
            sh "${{ vars.DIRECTORY }}/deploy.sh"
            echo "Application started"
            echo "Deleting directory"
            rm -rf ${{ vars.DIRECTORY }}
            echo "Directory deleted"
          EOF
